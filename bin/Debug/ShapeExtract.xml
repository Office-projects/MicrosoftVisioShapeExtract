<?xml version="1.0"?>
<doc>
<assembly>
<name>
ShapeExtract
</name>
</assembly>
<members>
<member name="T:ShapeExtract.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:ShapeExtract.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:ShapeExtract.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:ShapeExtract.My.Resources.Resources.Export">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:ShapeExtract.My.Resources.Resources.File">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:ShapeExtract.My.Resources.Resources.Folder">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:ShapeExtract.My.Resources.Resources.Settings">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:ShapeExtract.My.Resources.Resources.VisioAddin">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="M:ShapeExtract.Scripts.Main.DisplayErrorMessage(System.Exception@,System.Boolean)">
 <summary> 
 Global error message for all procedures
 </summary>
 <param name="ex">the handled exception</param>
 <param name="silent">show or hide the message</param>
</member>
<member name="M:ShapeExtract.Scripts.Main.SetFormIcon(System.Windows.Forms.Form@,System.Drawing.Bitmap@)">
 <summary> 
 Set form icon
 </summary>
 <param name="currentForm">the current form object</param>
 <param name="bmp">the icon referenced for the form</param>
</member>
<member name="M:ShapeExtract.Scripts.Main.SetAddRemoveProgramsIcon(System.String)">
 <summary>
 set the icon in add/remove programs
 </summary>
 <param name="iconName">The referenced icon name for the application.</param>
 <remarks>
 only run if deployed 
 </remarks>
</member>
<member name="T:ShapeExtract.Scripts.Ribbon">
 <summary>
 The ribbon code used for the addin
 </summary>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.GetCustomUI(System.String)">
 <summary>
 Loads the XML markup, either from an XML customization file or from XML markup embedded in the procedure, that customizes the Ribbon user interface.
 </summary>
 <param name="ribbonID">Represents the XML customization file</param>
 <returns>A method that returns a bitmap image for the control id.</returns>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.GetResourceText(System.String)">
 <summary>
 Get resource text
 </summary>
 <param name="resourceName"></param>
 <returns>string</returns>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.Ribbon_Load(Microsoft.Office.Core.IRibbonUI)">
 <summary>
 Load the ribbon
 </summary>
 <param name="ribbonUI">Represents the IRibbonUI instance that is provided by the Microsoft Office application to the Ribbon extensibility code.</param>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.GetButtonImage(Microsoft.Office.Core.IRibbonControl)">
 <summary>
To assign a images to the controls on the ribbon in the xml file
 </summary>
 <param name="control">Represents the object passed into the callback procedure of a control in a ribbon or another user interface that can be customized by using Office Fluent ribbon extensibility.</param>
 <returns>A method that returns a bitmap image for the control id.</returns>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.GetLabelText(Microsoft.Office.Core.IRibbonControl)">
 <summary>
 To assign text to controls on the ribbon from the xml file
 </summary>
 <param name="control">Represents the object passed into the callback procedure of a control in a ribbon or another user interface that can be customized by using Office Fluent ribbon extensibility.</param>
 <returns>A method that returns a string for a label. </returns>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.GetVisible(Microsoft.Office.Core.IRibbonControl)">
 <summary>
 To assign the visiblity to controls
 </summary>
 <param name="Control">Represents the object passed into the callback procedure of a control in a ribbon or another user interface that can be customized by using Office Fluent ribbon extensibility.</param>
 <returns>A method that returns true or false if the control is visible</returns>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.BtnExtractShapes(Microsoft.Office.Core.IRibbonControl)">
 <summary>
 Extract entity attributes from file
 </summary>
 <param name="control">Represents the object passed into the callback procedure of a control in a ribbon or another user interface that can be customized by using Office Fluent ribbon extensibility.</param>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.BtnOpenFolder(Microsoft.Office.Core.IRibbonControl)">
 <summary>
 Open a selected folder
 </summary>
 <param name="control">Represents the object passed into the callback procedure of a control in a ribbon or another user interface that can be customized by using Office Fluent ribbon extensibility.</param>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.BtnOpenFile(Microsoft.Office.Core.IRibbonControl)">
 <summary>
 Open the exported attributes file
 </summary>
 <param name="control">Represents the object passed into the callback procedure of a control in a ribbon or another user interface that can be customized by using Office Fluent ribbon extensibility.</param>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.BtnSettings(Microsoft.Office.Core.IRibbonControl)">
 <summary>
 show the settings form
 </summary>
 <param name="control">Represents the object passed into the callback procedure of a control in a ribbon or another user interface that can be customized by using Office Fluent ribbon extensibility.</param>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.OpenHelpApiFile(Microsoft.Office.Core.IRibbonControl)">
 <summary>
 Opens a api help file
 </summary>
 <param name="control">Represents the object passed into the callback procedure of a control in a ribbon or another user interface that can be customized by using Office Fluent ribbon extensibility.</param>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.OpenHelpAsBuiltFile(Microsoft.Office.Core.IRibbonControl)">
 <summary>
 Opens an as built help file
 </summary>
 <param name="control">Represents the object passed into the callback procedure of a control in a ribbon or another user interface that can be customized by using Office Fluent ribbon extensibility.</param>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.ExportShapeValues(System.String)">
 <summary>
 Export attribute values from Visio shapes
 Example: Call ExportShapeValues("C:\Temp\YourFileNameHere_ExportEntityAttributes.txt")
 </summary>
 <param name="fileName">The selected file name</param>
 <returns>Has there been an error during the export?</returns>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.ValidateString(System.String)">
 <summary>
 Remove any characters that will crash the row
 </summary>
 <param name="text">The string to validate</param>
 <returns>The corrected string</returns>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.RemoveString(System.String,System.String)">
 <summary>
 Remove any characters that will crash the row
 </summary>
 <param name="textValue">The string to evaluate</param>
 <param name="charValue">The string to remove</param>
 <returns>The corrected string</returns>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.OpenFile(System.String)">
 <summary>
 open a file from the source list
 </summary>
 <param name="fileName">The selected file to open</param>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Scripts.Ribbon.GetCurrentLocation(System.String)">
 <summary> 
 Returns the assembly location string based on the type of location
 </summary>
 <param name="locationType">Represents assembly location type </param>
 <returns>A method that returns a string of the current location </returns> 
 <remarks></remarks>
</member>
<member name="T:ShapeExtract.Forms.Settings">
 <summary>
 The settings used for the addin
 </summary>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Forms.Settings.FrmSettingsLoad(System.Object,System.EventArgs)">
 <summary>
 Procedures to run during before the form opens
 </summary>
 <param name="sender">contains the sender of the event, so if you had one method bound to multiple controls, you can distinguish them.</param>
 <param name="e">refers to the event arguments for the used event, they usually come in the form of properties/functions/methods that get to be available on it.</param>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Forms.Settings.FrmSettingsFormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
 <summary>
 Procedures to run when the forms closes
 </summary>
 <param name="sender">contains the sender of the event, so if you had one method bound to multiple controls, you can distinguish them.</param>
 <param name="e">refers to the event arguments for the used event, they usually come in the form of properties/functions/methods that get to be available on it.</param>
 <remarks></remarks>
</member>
<member name="M:ShapeExtract.Forms.Settings.SetLabelColumnWidth(System.Windows.Forms.PropertyGrid,System.Int32)">
 <summary> 
 Set the width of the property grid columns
 </summary>
 <param name="grid">the property grid control</param>
 <param name="width">the width for resizing the control</param>
</member>
<member name="T:ShapeExtract.ThisAddIn">

</member>
<member name="M:ShapeExtract.ThisAddIn.#ctor(Microsoft.Office.Tools.Factory,System.IServiceProvider)">

</member>
<member name="M:ShapeExtract.ThisAddIn.Initialize">

</member>
<member name="M:ShapeExtract.ThisAddIn.FinishInitialization">

</member>
<member name="M:ShapeExtract.ThisAddIn.InitializeDataBindings">

</member>
<member name="M:ShapeExtract.ThisAddIn.InitializeCachedData">

</member>
<member name="M:ShapeExtract.ThisAddIn.InitializeData">

</member>
<member name="M:ShapeExtract.ThisAddIn.BindToData">

</member>
<member name="M:ShapeExtract.ThisAddIn.StartCaching(System.String)">

</member>
<member name="M:ShapeExtract.ThisAddIn.StopCaching(System.String)">

</member>
<member name="M:ShapeExtract.ThisAddIn.IsCached(System.String)">

</member>
<member name="M:ShapeExtract.ThisAddIn.BeginInitialization">

</member>
<member name="M:ShapeExtract.ThisAddIn.EndInitialization">

</member>
<member name="M:ShapeExtract.ThisAddIn.InitializeControls">

</member>
<member name="M:ShapeExtract.ThisAddIn.InitializeComponents">

</member>
<member name="M:ShapeExtract.ThisAddIn.NeedsFill(System.String)">

</member>
<member name="T:ShapeExtract.Globals">

</member>
<member name="M:ShapeExtract.Globals.#ctor">

</member>
<member name="T:ShapeExtract.ThisRibbonCollection">

</member>
<member name="M:ShapeExtract.ThisRibbonCollection.#ctor(Microsoft.Office.Tools.Ribbon.RibbonFactory)">

</member>
</members>
</doc>
